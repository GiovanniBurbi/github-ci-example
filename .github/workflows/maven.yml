# To build a java project with Maven

name: Java CI with maven on Linux

on:
  push:
  pull_request:

jobs:
  build:
#    runs-on: ubuntu-latest
#    runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #test against several OSes:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        #test against several java versions:
        java: [8, 11]
        # excludes JDK 11 on macOS and Windows
        #exclude:
        #- os: macos-latest
        #  java: 11
        #- os: windows-latest
        #  java: 11

#    name: Build with Java ${{ matrix.java }} on ${{ matrix.os }}
    name: Build with Java ${{ matrix.java }} on Linux
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{matrix.java}}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-jdk${{ matrix.java }}-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: mvn -f myproject/pom.xml clean verify
    - name: Generate JUnit Report
      run: >
        mvn -f myproject/pom.xml    
        surefire-report:report-only site:site -Dgeneratereports=false
      if: ${{ always() }}
    - name: Archive JUnit Report
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: surefire-report-jdk-${{ matrix.java }}
        path: '**/target/site'



